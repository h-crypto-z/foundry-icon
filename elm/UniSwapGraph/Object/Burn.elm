-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module UniSwapGraph.Object.Burn exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import UniSwapGraph.InputObject
import UniSwapGraph.Interface
import UniSwapGraph.Object
import UniSwapGraph.Scalar
import UniSwapGraph.ScalarCodecs
import UniSwapGraph.Union


id : SelectionSet UniSwapGraph.ScalarCodecs.Id UniSwapGraph.Object.Burn
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecId |> .decoder)


transaction :
    SelectionSet decodesTo UniSwapGraph.Object.Transaction
    -> SelectionSet decodesTo UniSwapGraph.Object.Burn
transaction object_ =
    Object.selectionForCompositeField "transaction" [] object_ identity


timestamp : SelectionSet UniSwapGraph.ScalarCodecs.BigInt UniSwapGraph.Object.Burn
timestamp =
    Object.selectionForField "ScalarCodecs.BigInt" "timestamp" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBigInt |> .decoder)


pair :
    SelectionSet decodesTo UniSwapGraph.Object.Pair
    -> SelectionSet decodesTo UniSwapGraph.Object.Burn
pair object_ =
    Object.selectionForCompositeField "pair" [] object_ identity


liquidity : SelectionSet UniSwapGraph.ScalarCodecs.BigDecimal UniSwapGraph.Object.Burn
liquidity =
    Object.selectionForField "ScalarCodecs.BigDecimal" "liquidity" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBigDecimal |> .decoder)


sender : SelectionSet (Maybe UniSwapGraph.ScalarCodecs.Bytes) UniSwapGraph.Object.Burn
sender =
    Object.selectionForField "(Maybe ScalarCodecs.Bytes)" "sender" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBytes |> .decoder |> Decode.nullable)


amount0 : SelectionSet (Maybe UniSwapGraph.ScalarCodecs.BigDecimal) UniSwapGraph.Object.Burn
amount0 =
    Object.selectionForField "(Maybe ScalarCodecs.BigDecimal)" "amount0" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBigDecimal |> .decoder |> Decode.nullable)


amount1 : SelectionSet (Maybe UniSwapGraph.ScalarCodecs.BigDecimal) UniSwapGraph.Object.Burn
amount1 =
    Object.selectionForField "(Maybe ScalarCodecs.BigDecimal)" "amount1" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBigDecimal |> .decoder |> Decode.nullable)


to : SelectionSet (Maybe UniSwapGraph.ScalarCodecs.Bytes) UniSwapGraph.Object.Burn
to =
    Object.selectionForField "(Maybe ScalarCodecs.Bytes)" "to" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBytes |> .decoder |> Decode.nullable)


logIndex : SelectionSet (Maybe UniSwapGraph.ScalarCodecs.BigInt) UniSwapGraph.Object.Burn
logIndex =
    Object.selectionForField "(Maybe ScalarCodecs.BigInt)" "logIndex" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBigInt |> .decoder |> Decode.nullable)


amountUSD : SelectionSet (Maybe UniSwapGraph.ScalarCodecs.BigDecimal) UniSwapGraph.Object.Burn
amountUSD =
    Object.selectionForField "(Maybe ScalarCodecs.BigDecimal)" "amountUSD" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBigDecimal |> .decoder |> Decode.nullable)


needsComplete : SelectionSet Bool UniSwapGraph.Object.Burn
needsComplete =
    Object.selectionForField "Bool" "needsComplete" [] Decode.bool


feeTo : SelectionSet (Maybe UniSwapGraph.ScalarCodecs.Bytes) UniSwapGraph.Object.Burn
feeTo =
    Object.selectionForField "(Maybe ScalarCodecs.Bytes)" "feeTo" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBytes |> .decoder |> Decode.nullable)


feeLiquidity : SelectionSet (Maybe UniSwapGraph.ScalarCodecs.BigDecimal) UniSwapGraph.Object.Burn
feeLiquidity =
    Object.selectionForField "(Maybe ScalarCodecs.BigDecimal)" "feeLiquidity" [] (UniSwapGraph.ScalarCodecs.codecs |> UniSwapGraph.Scalar.unwrapCodecs |> .codecBigDecimal |> .decoder |> Decode.nullable)
